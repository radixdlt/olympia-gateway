version: "3.8"
services:
  fullnode:
    image: radixdlt/radixdlt-core:1.2.1
    profiles: ["fullnode"]
    init: true
    ports:
      - "127.0.0.1:3333:3333" # This allows you to connect to the Core API on localhost:3333
    cap_add:
      - NET_ADMIN
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      RADIXDLT_LOG_LEVEL: "${FULLNODE_LOG_LEVEL}"
      RADIXDLT_NETWORK_ID: "${FULLNODE_NETWORK_ID}"
      RADIXDLT_NETWORK_SEEDS_REMOTE: "${FULLNODE_NETWORK_BOOTSTRAP_NODE}"
      RADIX_NODE_KEYSTORE_PASSWORD: "${FULLNODE_KEY_PASSWORD}"
      JAVA_OPTS: -server -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -XX:+UseCompressedOops -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts -Djavax.net.ssl.trustStoreType=jks -Djava.security.egd=file:/dev/urandom -DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector --enable-preview
      RADIXDLT_VALIDATOR_KEY_LOCATION: "/home/radixdlt/node-keystore.ks"
      RADIXDLT_API_PORT: 3333
      RADIXDLT_TRANSACTIONS_API_ENABLE: "true"
    volumes:
      -  "./container-volumes/fullnode/ledger:/home/radixdlt/RADIXDB"
      -  "./container-volumes/fullnode/keystore.ks:/home/radixdlt/node-keystore.ks"
      -  "./container-volumes/fullnode/logs:/home/radixdlt/logs"

  postgres_db:
    # See https://hub.docker.com/_/postgres for details about configuration
    image: "postgres:12-alpine"
    profiles: ["network-gateway-built", "network-gateway-image"]
    ports:
      - "127.0.0.1:5532:5432" # This allows you to connect to the database locally on port localhost:5532
    # The default shutdown mode for this container is SIGINT:
    # https://github.com/docker-library/postgres/blob/e483778176ca34bcbe83ee17000820d4f6e64c28/12/alpine/Dockerfile
    # This enables fast Shutdown mode - see eg https://www.postgresql.org/docs/10/server-shutdown.html
    stop_grace_period: 90s # Ensure the DB is allowed time to stop to prevent needing to recover on next start-up
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./container-volumes/.postgresdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_SUPERUSER}"
      POSTGRES_PASSWORD: "${POSTGRES_SUPERUSER_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB_NAME}"

  data_aggregator: # This is the base -- the _image and _built containers are defined below
    image: radixdlt/ng-data-aggregator:1.1.2
    profiles: ["NONE"]
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "127.0.0.1:5207:80" # This allows you to connect to the API (for root and health checks) at http://localhost:5207
      - "127.0.0.1:1234:1234" # This allows you to connect to the metrics API at http://localhost:1234
    environment:
      # WIPE_DATABASE: "true"
      ASPNETCORE_URLS: "http://*:80" # Binds to 80 on all interfaces
      RADIX_NG_AGGREGATOR__CustomJsonConfigurationFilePath: "/home/radixdlt/network-gateway/config.json"
      RADIX_NG_AGGREGATOR__PrometheusMetricsPort: "1234"
      RADIX_NG_AGGREGATOR__MaxWaitForDbOnStartupMs: "${MAX_DB_WAIT_MS_ON_START}" # Wait for PostGres to boot up
      RADIX_NG_AGGREGATOR__DisableCoreApiHttpsCertificateChecks: "${DISABLE_CORE_API_CERTIFICATE_CHECKS}"
      RADIX_NG_AGGREGATOR__NetworkName: "${NETWORK_NAME}"
      RADIX_NG_AGGREGATOR__ConnectionStrings__AggregatorDbContext: "Host=postgres_db:5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_SUPERUSER};Password=${POSTGRES_SUPERUSER_PASSWORD}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__0__Name: "${NODE_0_NAME}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__0__CoreApiAddress: "${NODE_0_CORE_API_ADDRESS}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__0__CoreApiAuthorizationHeader: "${NODE_0_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__0__TrustWeighting: "1"
      RADIX_NG_AGGREGATOR__CoreApiNodes__0__Enabled: "${NODE_0_ENABLED}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__1__Name: "${NODE_1_NAME}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__1__CoreApiAddress: "${NODE_1_CORE_API_ADDRESS}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__1__CoreApiAuthorizationHeader: "${NODE_1_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__1__TrustWeighting: "1"
      RADIX_NG_AGGREGATOR__CoreApiNodes__1__Enabled: "${NODE_1_ENABLED}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__2__Name: "${NODE_2_NAME}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__2__CoreApiAddress: "${NODE_2_CORE_API_ADDRESS}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__2__CoreApiAuthorizationHeader: "${NODE_2_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__2__TrustWeighting: "1"
      RADIX_NG_AGGREGATOR__CoreApiNodes__2__Enabled: "${NODE_2_ENABLED}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__3__Name: "${NODE_3_NAME}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__3__CoreApiAddress: "${NODE_3_CORE_API_ADDRESS}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__3__CoreApiAuthorizationHeader: "${NODE_3_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__3__TrustWeighting: "1"
      RADIX_NG_AGGREGATOR__CoreApiNodes__3__Enabled: "${NODE_3_ENABLED}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__4__Name: "${NODE_4_NAME}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__4__CoreApiAddress: "${NODE_4_CORE_API_ADDRESS}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__4__CoreApiAuthorizationHeader: "${NODE_4_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_AGGREGATOR__CoreApiNodes__4__TrustWeighting: "1"
      RADIX_NG_AGGREGATOR__CoreApiNodes__4__Enabled: "${NODE_4_ENABLED}"
    volumes:
      - ./data-aggregator-fixed-configuration.json:/home/radixdlt/network-gateway/config.json

  gateway_api: # This is the base -- the _image and _built containers are defined below
    image: radixdlt/ng-gateway-api:1.1.2
    profiles: ["NONE"]
    ports:
      - "127.0.0.1:5308:80" # This allows you to connect to the API at http://localhost:5308
      - "127.0.0.1:1235:1235" # This allows you to connect to the metrics API at http://localhost:1235
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ASPNETCORE_URLS: "http://*:80" # Binds to 80 on all interfaces
      RADIX_NG_API__CustomJsonConfigurationFilePath: "/home/radixdlt/network-gateway/config.json"
      RADIX_NG_API__PrometheusMetricsPort: "1235"
      RADIX_NG_API__MaxWaitForDbOnStartupMs: "${MAX_DB_WAIT_MS_ON_START}" # Wait for PostGres to boot up
      RADIX_NG_API__DisableCoreApiHttpsCertificateChecks: "${DISABLE_CORE_API_CERTIFICATE_CHECKS}"
      RADIX_NG_API__NetworkName: "${NETWORK_NAME}"
      RADIX_NG_API__EnableSwagger: "${ENABLE_SWAGGER}"
      RADIX_NG_API__MaxPageSize: "${MAX_PAGE_SIZE}"
      RADIX_NG_API__AcceptableLedgerLag__PreventReadRequestsIfDbLedgerIsBehind: "${PREVENT_OUTDATED_READ_REQUESTS}"
      RADIX_NG_API__AcceptableLedgerLag__PreventConstructionRequestsIfDbLedgerIsBehind: "${PREVENT_OUTDATED_CONSTRUCTION_REQUESTS}"
      RADIX_NG_API__ConnectionStrings__ReadOnlyDbContext: "Host=postgres_db:5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_SUPERUSER};Password=${POSTGRES_SUPERUSER_PASSWORD}"
      RADIX_NG_API__ConnectionStrings__ReadWriteDbContext: "Host=postgres_db:5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_SUPERUSER};Password=${POSTGRES_SUPERUSER_PASSWORD}"
      RADIX_NG_API__CoreApiNodes__0__Name: "${NODE_0_NAME}"
      RADIX_NG_API__CoreApiNodes__0__CoreApiAddress: "${NODE_0_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__0__CoreApiAuthorizationHeader: "${NODE_0_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__0__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__0__Enabled: "${NODE_0_ENABLED}"
      RADIX_NG_API__CoreApiNodes__1__Name: "${NODE_1_NAME}"
      RADIX_NG_API__CoreApiNodes__1__CoreApiAddress: "${NODE_1_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__1__CoreApiAuthorizationHeader: "${NODE_1_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__1__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__1__Enabled: "${NODE_1_ENABLED}"
      RADIX_NG_API__CoreApiNodes__2__Name: "${NODE_2_NAME}"
      RADIX_NG_API__CoreApiNodes__2__CoreApiAddress: "${NODE_2_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__2__CoreApiAuthorizationHeader: "${NODE_2_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__2__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__2__Enabled: "${NODE_2_ENABLED}"
      RADIX_NG_API__CoreApiNodes__3__Name: "${NODE_3_NAME}"
      RADIX_NG_API__CoreApiNodes__3__CoreApiAddress: "${NODE_3_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__3__CoreApiAuthorizationHeader: "${NODE_3_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__3__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__3__Enabled: "${NODE_3_ENABLED}"
      RADIX_NG_API__CoreApiNodes__4__Name: "${NODE_4_NAME}"
      RADIX_NG_API__CoreApiNodes__4__CoreApiAddress: "${NODE_4_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__4__CoreApiAuthorizationHeader: "${NODE_4_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__4__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__4__Enabled: "${NODE_4_ENABLED}"
    volumes:
      - ./gateway-api-fixed-configuration.json:/home/radixdlt/network-gateway/config.json

  data_aggregator_image:
    # NB - image: is defined in the base data_aggregator
    extends:
      service: data_aggregator
    profiles: ["network-gateway-image"]

  gateway_api_image:
    # NB - image: is defined in the base gateway_api
    extends:
      service: gateway_api
    profiles: ["network-gateway-image"]

  data_aggregator_built:
    extends:
      service: data_aggregator
    profiles: ["network-gateway-built"]
    build: # build: takes higher priority over image:, so this allows us to capture all the config, but replace the image with a direct build
      context: "../"
      dockerfile: "./src/DataAggregator/Dockerfile"

  gateway_api_built:
    extends:
      service: gateway_api
    profiles: ["network-gateway-built"]
    build: # build: takes higher priority over image:, so this allows us to capture all the config, but replace the image with a direct build
      context: "../"
      dockerfile: "./src/GatewayAPI/Dockerfile"
